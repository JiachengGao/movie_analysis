Categories

def Obtain_list_Occurences(columnName):
    # Obtaining a list of columnName
    list_details = list(map(str,(data[columnName])))
    listOcc = []
    for i in data[columnName]:
        split_genre = list(map(str, i.split('|')))
        for j in split_genre:
            if j not in listOcc:
                listOcc.append(j)
    return listOcc
genre = []
genre = Obtain_list_Occurences("genres")
for word in genre:
    data[word] = data['genres'].map(lambda s: 1 if word in str(s) else 0)    
data.loc[:,'Action': 'Foreign'].head(5)
df=data.loc[:,'Action': 'Foreign']
df.to_csv("movies_category.csv",index=False)

Keywords

## Funtion to find top 10 in list
def TopTen(theList):
    TopTen = list()
    for i in range(0, 10):
        TopTen.append(theList[i][0])   
    return TopTen
def count_word(df, ref_col, liste):
    keyword_count = dict()
    for s in liste: keyword_count[s] = 0
    for liste_keywords in df[ref_col].str.split('|'):        
        if type(liste_keywords) == float and pd.isnull(liste_keywords): continue        
        for s in [s for s in liste_keywords if s in liste]: 
            if pd.notnull(s): keyword_count[s] += 1
            
    # convert the dictionary in a list to sort the keywords by frequency
    keyword_occurences = []
    for k,v in keyword_count.items():
        keyword_occurences.append([k,v])
    keyword_occurences.sort(key = lambda x:x[1], reverse = True)
    return keyword_occurences, keyword_count
set_keywords = set()
for liste_keywords in data['plot_keywords'].str.split('|').values:
    if isinstance(liste_keywords, float): continue  # only happen if liste_keywords = NaN
    set_keywords = set_keywords.union(liste_keywords)
# remove null chain entry
set_keywords.remove('')
keyword_occurences, dum = count_word(data, 'plot_keywords', set_keywords)
for word in TopTen(keyword_occurences):
    data[word] = data['plot_keywords'].map(lambda s: 1 if word in str(s) else 0)   
data.drop('plot_keywords',axis=1,inplace=True)
data.loc[:,'woman director':].head()
df=data.loc[:,'woman director':]
df.to_csv("movies_keywords.csv",index=False)

Director

data['director_name'].fillna('unknown',inplace=True)

def to_frequency_table(data):
    frequencytable = {}
    for key in data:
        if key in frequencytable:
            frequencytable[key] += 1
        else:
            frequencytable[key] = 1
    return frequencytable
 
director_dic = to_frequency_table(data['director_name'])
director_list = list(director_dic.items())
director_list.sort(key=lambda tup: tup[1],reverse=True)

for word in TopTen(director_list):
    data[word] = data['director_name'].map(lambda s: 1 if word in str(s) else 0)

data.loc[:,'Steven Spielberg': ].head()
df = data.loc[:,'Steven Spielberg': ]
df.to_csv("movies_Director.csv",index=False)

Actor

data['actor_1_name'].fillna('unknown',inplace=True)
data['actor_2_name'].fillna('unknown',inplace=True)
data['actor_3_name'].fillna('unknown',inplace=True)

data[['actor_1_name','actor_2_name','actor_3_name']].head()
df=data[['actor_1_name','actor_2_name','actor_3_name']]
df.to_csv("movies_Actor.csv",index=False)

data['actors_name'] = data[['actor_1_name', 'actor_2_name','actor_3_name']].apply(lambda x: '|'.join(x), axis=1)
data[['actors_name']].head()

for word in actor:
    data[word] = data['actors_name'].map(lambda s: 1 if word in str(s) else 0)
actor = []
actor = Obtain_list_Occurences("actors_name")

Company

data['companies_1'].fillna('unknown',inplace=True)
data['companies_2'].fillna('unknown',inplace=True)
data['companies_3'].fillna('unknown',inplace=True)

data['companies_name'] = data[['companies_1', 'companies_2','companies_3']].apply(lambda x: '|'.join(x), axis=1)
company = []
company = Obtain_list_Occurences("companies_name")

for word in company:
    data[word] = data['companies_name'].map(lambda s: 1 if word in str(s) else 0)

data[['companies_1','companies_2','companies_3']].head()
df = data[['companies_1','companies_2','companies_3']]
df.to_csv("movies_Company.csv",index=False)

Countries

data['country'].fillna('unknown',inplace=True)

def to_frequency_table(data):
    frequencytable = {}
    for key in data:
        if key in frequencytable:
            frequencytable[key] += 1
        else:
            frequencytable[key] = 1
    return frequencytable
    
country_dic = to_frequency_table(data['country'])
country_list = list(director_dic.items())
country_list.sort(key=lambda tup: tup[1],reverse=True)

for word in TopTen(country_list):
    data[word] = data['country'].map(lambda s: 1 if word in str(s) else 0)

data[['country']].head()
df = data[['country']]
df.to_csv('movie_country.csv')
